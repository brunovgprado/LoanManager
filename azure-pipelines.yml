trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  project_name: 'LoanManager'
  netcore_version: '3.1'
  sonarcloud_project: 'hortohome_LoanManager'
  sonarcloud_organization: 'hortohome'
  sonarcloud_account: 'o-pinguin-democratico73937'

jobs:
- job: Build
  steps:
  - script: |
      pwd && ls -la
      dotnet restore $(project_name)
      dotnet publish $(project_name) -c Release -o bin/Release/netcoreapp$(netcore_version)
      mkdir artifact
      cp -r $(System.DefaultWorkingDirectory)/bin/Release/netcoreapp$(netcore_version) artifact/$(Build.SourceBranchName)
    displayName: Build Application
  - task: PublishPipelineArtifact@1
    displayName: Store Application Artifact
    inputs:
      path: $(System.DefaultWorkingDirectory)/artifact
      artifact: $(project_name)

- job: UnityTests
  dependsOn: Build
  steps:
  - script: |
      dotnet tool install --global coverlet.console
      dotnet add $(project_name)/$(project_name).Tests/$(project_name).Tests.csproj package coverlet.msbuild
      dotnet add $(project_name)/$(project_name).Tests/$(project_name).Tests.csproj package XunitXml.TestLogger
      dotnet test /p:CollectCoverage=true \
                  /p:CoverletOutputFormat=\"opencover,cobertura\" \
                  /p:CoverletOutput=results/result \
                  /p:Exclude=[xunit.*]* $(project_name)/$(project_name).sln \
                  --test-adapter-path:. --logger:"xunit;LogFilePath=results/result.xunit.xml"
    displayName: Runnig Unit Tests
  - task:  PublishPipelineArtifact@1
    displayName: Store Test Result
    inputs:
      path: $(System.DefaultWorkingDirectory)/$(project_name)/$(project_name).Tests/results
      artifact: UnitTestResults
  - task: PublishCodeCoverageResults@1
    displayName: Publish Code Coverage
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: $(System.DefaultWorkingDirectory)/$(project_name)/$(project_name).Tests/results/result.cobertura.xml
      pathToSources: .
      failIfCoverageEmpty: true       
  - task: PublishTestResults@2
    displayName: Publish Test Result
    inputs:
      testResultsFormat: 'XUnit'
      testResultsFiles: '$(System.DefaultWorkingDirectory)/$(project_name)/$(project_name).Tests/results/result.xunit.xml'
      testRunTitle: Collecting Test Results

- job: QualityAnalysis
  dependsOn: Build
  steps:
    - task: DownloadPipelineArtifact@2
      displayName: Get Test Results
      inputs:
        artifact: UnitTestResults
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: '$(sonarcloud_account)'
        organization: '$(sonarcloud_organization)'
        scannerMode: 'MSBuild' 
        projectKey: '$(sonarcloud_project)'
        projectName: '$(project_name)'
        extraProperties: 'sonar.cs.opencover.reportsPaths=$(Pipeline.Workspace)/result.opencover.xml'
    - script: |
        dotnet build 
      displayName: Runing Build for Analysis
    - task: SonarCloudAnalyze@1
      displayName: Finish Sonar Analysis
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'